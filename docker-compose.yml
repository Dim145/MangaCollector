networks:
  internal:
    internal: true

volumes:
  db_data:

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: mangacollector
      POSTGRES_PASSWORD: mangacollectormangacollector
      POSTGRES_DB: mangacollector
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - internal

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "12000:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default
      - internal

  server:
    build: ./server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=PathPrefix(`/api`) || PathPrefix(`/auth`)"
      - "traefik.http.services.server.loadbalancer.server.port=3000"
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: "production"
      PORT: 3000
      AUTH_MODE: openidconnect
      AUTH_ISSUER: https://xxx/
      AUTH_ISSUER_BASE_PATH: /api/v1/oauth/
      AUTH_CLIENT_ID: xxx
      AUTH_CLIENT_SECRET: xxx
      SESSION_SECRET: "xxx"
      FRONTEND_URL: http://localhost:12000
      POSTGRES_URL: postgres://mangacollector:mangacollectormangacollector@db:5432/mangacollector?sslmode=disable
    networks:
      - internal
      - default

  client:
    build: ./client
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=PathPrefix(`/`)"
      - "traefik.http.services.client.loadbalancer.server.port=80"
    environment:
      FRONTEND_URL: http://localhost:12000
    ports:
      - "5173:80"
